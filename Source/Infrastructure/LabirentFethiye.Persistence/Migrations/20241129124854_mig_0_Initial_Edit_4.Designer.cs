// <auto-generated />
using System;
using LabirentFethiye.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabirentFethiye.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241129124854_mig_0_Initial_Edit_4")]
    partial class mig_0_Initial_Edit_4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<int>("CityNumber")
                        .HasColumnType("int")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("District", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("IdentityRoles", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("IdentityRoleClaims", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("IdentityUsers", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserClaims", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserLogins", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("IdentityUserRoles", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("IdentityUserTokens", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.Town", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Town", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("Icon")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnOrder(7);

                    b.Property<int>("Line")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(8);

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.CategoryDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("DescriptionLong")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<string>("DescriptionShort")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnOrder(9);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryDetail", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(12);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(9);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(7);

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(10);

                    b.Property<decimal>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(5m)
                        .HasColumnOrder(14);

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(8);

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("Video")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(13);

                    b.Property<Guid?>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("VillaId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.DistanceRuler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnOrder(7);

                    b.Property<int>("Line")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(8);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<Guid?>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("VillaId");

                    b.ToTable("DistanceRuler", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.DistanceRulerDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<Guid>("DistanceRulerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(9);

                    b.HasKey("Id");

                    b.HasIndex("DistanceRulerId");

                    b.ToTable("DistanceRulerDetail", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Feature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnOrder(7);

                    b.Property<int>("Line")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(8);

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("ParentId");

                    b.HasIndex("RoomId");

                    b.ToTable("Feature", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.FeatureDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GeneralStatusType")
                        .HasColumnType("int");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.ToTable("FeatureDetails");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<int>("Bath")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(9);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("ElectricityMeterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(12);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("GoogleMap")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnOrder(10);

                    b.Property<string>("InternetMeterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(13);

                    b.Property<int>("Line")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(16);

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Person")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(8);

                    b.Property<int>("PriceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(15);

                    b.Property<int>("Room")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(7);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TownId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("WaterMaterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(11);

                    b.Property<string>("WifiPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(14);

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.ToTable("Hotel", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.HotelDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("DescriptionLong")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<string>("DescriptionShort")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnOrder(9);

                    b.Property<string>("FeatureTextBlue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(11);

                    b.Property<string>("FeatureTextRed")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(12);

                    b.Property<string>("FeatureTextWhite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(13);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelDetail", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnOrder(8);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("InOrOut")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid>("PaymentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PriceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(10);

                    b.Property<Guid?>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<Guid?>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("ReservationId");

                    b.HasIndex("RoomId");

                    b.HasIndex("VillaId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PaymentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnOrder(8);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.ToTable("PaymentType", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnOrder(10);

                    b.Property<string>("ImgAlt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<string>("ImgTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(9);

                    b.Property<int>("Line")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(12);

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(7);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("VideoLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnOrder(11);

                    b.Property<Guid?>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.HasIndex("VillaId");

                    b.ToTable("Photo", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PriceDate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<Guid?>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("VillaId");

                    b.ToTable("PriceDate", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PriceTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("Icon")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnOrder(7);

                    b.Property<int>("Line")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(9);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnOrder(8);

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<Guid?>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("VillaId");

                    b.ToTable("PriceTable", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PriceTableDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(9);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(7);

                    b.Property<Guid>("PriceTableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("PriceTableId");

                    b.ToTable("PriceTableDetail", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(15);

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(12);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<decimal>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m)
                        .HasColumnOrder(16);

                    b.Property<decimal>("ExtraPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(17);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<bool>("HomeOwner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(20);

                    b.Property<bool>("IsCleaningPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(14);

                    b.Property<bool>("IsDepositPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(13);

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnOrder(10);

                    b.Property<int>("PriceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(19);

                    b.Property<int>("ReservationChannalType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5)
                        .HasColumnOrder(9);

                    b.Property<string>("ReservationNumber")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnOrder(7);

                    b.Property<int>("ReservationStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(8);

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(18);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<Guid?>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("VillaId");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.ReservationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("Email")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnOrder(10);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("IdNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(7);

                    b.Property<bool>("Owner")
                        .HasColumnType("bit")
                        .HasColumnOrder(11);

                    b.Property<int>("PeopleType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(12);

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(9);

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationInfo", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.ReservationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnOrder(8);

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationItem", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<int>("Bath")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(9);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("ElectricityMeterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(11);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InternetMeterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(12);

                    b.Property<int>("Line")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(14);

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnlineReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(16);

                    b.Property<int>("Person")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(8);

                    b.Property<int>("PriceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(15);

                    b.Property<int>("Rooms")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(7);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("WaterMaterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(10);

                    b.Property<string>("WifiPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(13);

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.RoomDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("DescriptionLong")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<string>("DescriptionShort")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnOrder(9);

                    b.Property<string>("FeatureTextBlue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(11);

                    b.Property<string>("FeatureTextRed")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(12);

                    b.Property<string>("FeatureTextWhite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(13);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomDetail", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<int>("Bath")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(8);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("ElectricityMeterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(15);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("GoogleMap")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnOrder(10);

                    b.Property<string>("InternetMeterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(16);

                    b.Property<bool>("IsRent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(12);

                    b.Property<bool>("IsSale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(13);

                    b.Property<int>("Line")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(22);

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinimumReservationNight")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5)
                        .HasColumnOrder(23);

                    b.Property<bool>("OnlineReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(11);

                    b.Property<int>("Person")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(9);

                    b.Property<int>("PriceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(21);

                    b.Property<int>("Room")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(7);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TownId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("VillaNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(18);

                    b.Property<string>("VillaOwnerName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnOrder(19);

                    b.Property<string>("VillaOwnerPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(20);

                    b.Property<string>("WaterMaterNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(14);

                    b.Property<string>("WifiPassword")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(17);

                    b.HasKey("Id");

                    b.HasIndex("TownId");

                    b.HasIndex("VillaNumber")
                        .IsUnique();

                    b.ToTable("Villa", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.VillaCategory", b =>
                {
                    b.Property<Guid>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VillaId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("VillaCategory", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.VillaDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("CreatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("0x0");

                    b.Property<string>("DescriptionLong")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(10);

                    b.Property<string>("DescriptionShort")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnOrder(9);

                    b.Property<string>("FeatureTextBlue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(11);

                    b.Property<string>("FeatureTextRed")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(12);

                    b.Property<string>("FeatureTextWhite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(13);

                    b.Property<int>("GeneralStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnOrder(6);

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(8);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(5);

                    b.Property<Guid>("UpdatedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("0x0");

                    b.Property<Guid>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaDetail", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.VillaFeature", b =>
                {
                    b.Property<Guid>("VillaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VillaId", "FeatureId");

                    b.HasIndex("FeatureId");

                    b.ToTable("VillaFeature", (string)null);
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.District", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppRoleClaim", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUserClaim", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUserLogin", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUserRole", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUserToken", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.IdentityEntities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.Town", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.District", "District")
                        .WithMany("Towns")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.CategoryDetail", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Category", "Category")
                        .WithMany("CategoryDetails")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Comment", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", "Hotel")
                        .WithMany("Comments")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("Comments")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Hotel");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.DistanceRuler", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", "Hotel")
                        .WithMany("DistanceRulers")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("DistanceRulers")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Hotel");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.DistanceRulerDetail", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.DistanceRuler", "DistanceRuler")
                        .WithMany("DistanceRulerDetails")
                        .HasForeignKey("DistanceRulerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistanceRuler");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Feature", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", null)
                        .WithMany("Features")
                        .HasForeignKey("HotelId");

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Feature", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Room", null)
                        .WithMany("Features")
                        .HasForeignKey("RoomId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.FeatureDetail", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Feature", "Feature")
                        .WithMany("FeatureDetails")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.Town", "Town")
                        .WithMany("Hotels")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Town");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.HotelDetail", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", "Hotel")
                        .WithMany("HotelDetails")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Payment", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", "Hotel")
                        .WithMany("Payments")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.PaymentType", "PaymentType")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Reservation", "Reservation")
                        .WithMany("Payments")
                        .HasForeignKey("ReservationId");

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Room", "Room")
                        .WithMany("Payments")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("Payments")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Hotel");

                    b.Navigation("PaymentType");

                    b.Navigation("Reservation");

                    b.Navigation("Room");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Photo", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", "Hotel")
                        .WithMany("Photos")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Room", "Room")
                        .WithMany("Photos")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("Photos")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Hotel");

                    b.Navigation("Room");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PriceDate", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Room", "Room")
                        .WithMany("PriceDates")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("PriceDates")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Room");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PriceTable", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Room", "Room")
                        .WithMany("PriceTables")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("PriceTables")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Room");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PriceTableDetail", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.PriceTable", "PriceTable")
                        .WithMany("PriceTableDetails")
                        .HasForeignKey("PriceTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PriceTable");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Reservation", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("Reservations")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Room");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.ReservationInfo", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Reservation", "Reservation")
                        .WithMany("ReservationInfos")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.ReservationItem", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Reservation", "Reservation")
                        .WithMany("ReservationItems")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Room", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.RoomDetail", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Room", "Room")
                        .WithMany("RoomDetails")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.GlobalEntities.Town", "Town")
                        .WithMany("Villas")
                        .HasForeignKey("TownId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Town");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.VillaCategory", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Category", "Category")
                        .WithMany("VillaCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("VillaCategories")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.VillaDetail", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("VillaDetails")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.VillaFeature", b =>
                {
                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Feature", "Feature")
                        .WithMany("VillaFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", "Villa")
                        .WithMany("VillaFeatures")
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.City", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.District", b =>
                {
                    b.Navigation("Towns");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.GlobalEntities.Town", b =>
                {
                    b.Navigation("Hotels");

                    b.Navigation("Villas");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Category", b =>
                {
                    b.Navigation("CategoryDetails");

                    b.Navigation("VillaCategories");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.DistanceRuler", b =>
                {
                    b.Navigation("DistanceRulerDetails");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Feature", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("FeatureDetails");

                    b.Navigation("VillaFeatures");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Hotel", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("DistanceRulers");

                    b.Navigation("Features");

                    b.Navigation("HotelDetails");

                    b.Navigation("Payments");

                    b.Navigation("Photos");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PaymentType", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.PriceTable", b =>
                {
                    b.Navigation("PriceTableDetails");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Reservation", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("ReservationInfos");

                    b.Navigation("ReservationItems");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Room", b =>
                {
                    b.Navigation("Features");

                    b.Navigation("Payments");

                    b.Navigation("Photos");

                    b.Navigation("PriceDates");

                    b.Navigation("PriceTables");

                    b.Navigation("Reservations");

                    b.Navigation("RoomDetails");
                });

            modelBuilder.Entity("LabirentFethiye.Domain.Entities.ProjectEntities.Villa", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("DistanceRulers");

                    b.Navigation("Payments");

                    b.Navigation("Photos");

                    b.Navigation("PriceDates");

                    b.Navigation("PriceTables");

                    b.Navigation("Reservations");

                    b.Navigation("VillaCategories");

                    b.Navigation("VillaDetails");

                    b.Navigation("VillaFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
